syntax = "proto3";
option java_package = "com.game.protoGen";
option go_package = "/protoGen";
enum ProtoError {
  SUCCESS = 0;
  FAILED = 1;
  INVALID_LOGIN_TOKEN = 2;
  INVALID_GAME_TICKET = 3;
  INVALID_PARAM = 10;
  NAME_LENGTH_INVALID = 11;
  NOTICE_LENGTH_INVALID = 12;
  COST_NOT_ENOUGH = 13;
}

enum ProtoCode {
  INVALID = 0;
  ERROR_MESSAGE = 1;
  HEART_BEAT_REQUEST = 2;
  HEART_BEAT_RESPONSE = 3;
  ACCOUNT_LOGIN_REQ = 10;
  ACCOUNT_LOGIN_RES = 11;
  LOGOUT_REQUEST = 12;
  LOGOUT_RESPONSE = 13;
  KICK_OUT_REQUEST = 14;
  KICK_OUT_RESPONSE = 15;

  GAME_LOGIN_REQ = 16;
  GAME_LOGIN_RES = 17;


  RPC_ENTER_SCENE_REQ  = 100;


  LOGIN_INIT_REQUEST = 200;
  PERFORMANCE_TEST_REQ = 201;
  PERFORMANCE_TEST_RES = 202;
  DIRECT_TO_TEAM_REQ = 203;
  DIRECT_TO_TEAM_RES = 204;
  RPC_REQ_TEST = 205;
}
message MsgHeader{
  int32 seqNo = 1; //序列号
  int32 reqId = 2; //请求Id 从1：开始， 0：表示 push,  >0: rpc
  int32 msgId = 3; //消息id
  int32 crc = 4;  //messageBody crc
  int32  errCode = 5;
  int64 uid = 6;  //  to roleId
  int32 routerTo = 7; // router to server type Only for the msg to send to router
}

message HeartBeatRequest {
  int64 clientTime = 1; // 客户端时间
}

message HeartBeatResponse {
  int64 clientTime = 1; // 客户端时间
  int64 serverTime = 2; // 服务器时间
}

//only for test
message  RpcReqTest{
  int32 someId = 1;
  string  someStr = 2;
}
//only for test
message RpcReqRespons{
  int32 someId2 = 1;
  string  someStr2 = 2;
}
